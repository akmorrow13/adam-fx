/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.tmoerman.adam.fx.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DbSnpAnnotations extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DbSnpAnnotations\",\"namespace\":\"org.tmoerman.adam.fx.avro\",\"fields\":[{\"name\":\"RS\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"default\":[]},{\"name\":\"VLD\",\"type\":\"boolean\",\"default\":false},{\"name\":\"G5A\",\"type\":\"boolean\",\"default\":false},{\"name\":\"MUT\",\"type\":\"boolean\",\"default\":false},{\"name\":\"OM\",\"type\":\"boolean\",\"default\":false},{\"name\":\"PM\",\"type\":\"boolean\",\"default\":false}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<java.lang.Integer> RS;
  @Deprecated public boolean VLD;
  @Deprecated public boolean G5A;
  @Deprecated public boolean MUT;
  @Deprecated public boolean OM;
  @Deprecated public boolean PM;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DbSnpAnnotations() {}

  /**
   * All-args constructor.
   */
  public DbSnpAnnotations(java.util.List<java.lang.Integer> RS, java.lang.Boolean VLD, java.lang.Boolean G5A, java.lang.Boolean MUT, java.lang.Boolean OM, java.lang.Boolean PM) {
    this.RS = RS;
    this.VLD = VLD;
    this.G5A = G5A;
    this.MUT = MUT;
    this.OM = OM;
    this.PM = PM;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return RS;
    case 1: return VLD;
    case 2: return G5A;
    case 3: return MUT;
    case 4: return OM;
    case 5: return PM;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: RS = (java.util.List<java.lang.Integer>)value$; break;
    case 1: VLD = (java.lang.Boolean)value$; break;
    case 2: G5A = (java.lang.Boolean)value$; break;
    case 3: MUT = (java.lang.Boolean)value$; break;
    case 4: OM = (java.lang.Boolean)value$; break;
    case 5: PM = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'RS' field.
   */
  public java.util.List<java.lang.Integer> getRS() {
    return RS;
  }

  /**
   * Sets the value of the 'RS' field.
   * @param value the value to set.
   */
  public void setRS(java.util.List<java.lang.Integer> value) {
    this.RS = value;
  }

  /**
   * Gets the value of the 'VLD' field.
   */
  public java.lang.Boolean getVLD() {
    return VLD;
  }

  /**
   * Sets the value of the 'VLD' field.
   * @param value the value to set.
   */
  public void setVLD(java.lang.Boolean value) {
    this.VLD = value;
  }

  /**
   * Gets the value of the 'G5A' field.
   */
  public java.lang.Boolean getG5A() {
    return G5A;
  }

  /**
   * Sets the value of the 'G5A' field.
   * @param value the value to set.
   */
  public void setG5A(java.lang.Boolean value) {
    this.G5A = value;
  }

  /**
   * Gets the value of the 'MUT' field.
   */
  public java.lang.Boolean getMUT() {
    return MUT;
  }

  /**
   * Sets the value of the 'MUT' field.
   * @param value the value to set.
   */
  public void setMUT(java.lang.Boolean value) {
    this.MUT = value;
  }

  /**
   * Gets the value of the 'OM' field.
   */
  public java.lang.Boolean getOM() {
    return OM;
  }

  /**
   * Sets the value of the 'OM' field.
   * @param value the value to set.
   */
  public void setOM(java.lang.Boolean value) {
    this.OM = value;
  }

  /**
   * Gets the value of the 'PM' field.
   */
  public java.lang.Boolean getPM() {
    return PM;
  }

  /**
   * Sets the value of the 'PM' field.
   * @param value the value to set.
   */
  public void setPM(java.lang.Boolean value) {
    this.PM = value;
  }

  /** Creates a new DbSnpAnnotations RecordBuilder */
  public static org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder newBuilder() {
    return new org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder();
  }
  
  /** Creates a new DbSnpAnnotations RecordBuilder by copying an existing Builder */
  public static org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder newBuilder(org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder other) {
    return new org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder(other);
  }
  
  /** Creates a new DbSnpAnnotations RecordBuilder by copying an existing DbSnpAnnotations instance */
  public static org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder newBuilder(org.tmoerman.adam.fx.avro.DbSnpAnnotations other) {
    return new org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder(other);
  }
  
  /**
   * RecordBuilder for DbSnpAnnotations instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DbSnpAnnotations>
    implements org.apache.avro.data.RecordBuilder<DbSnpAnnotations> {

    private java.util.List<java.lang.Integer> RS;
    private boolean VLD;
    private boolean G5A;
    private boolean MUT;
    private boolean OM;
    private boolean PM;

    /** Creates a new Builder */
    private Builder() {
      super(org.tmoerman.adam.fx.avro.DbSnpAnnotations.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.RS)) {
        this.RS = data().deepCopy(fields()[0].schema(), other.RS);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.VLD)) {
        this.VLD = data().deepCopy(fields()[1].schema(), other.VLD);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.G5A)) {
        this.G5A = data().deepCopy(fields()[2].schema(), other.G5A);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.MUT)) {
        this.MUT = data().deepCopy(fields()[3].schema(), other.MUT);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.OM)) {
        this.OM = data().deepCopy(fields()[4].schema(), other.OM);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PM)) {
        this.PM = data().deepCopy(fields()[5].schema(), other.PM);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DbSnpAnnotations instance */
    private Builder(org.tmoerman.adam.fx.avro.DbSnpAnnotations other) {
            super(org.tmoerman.adam.fx.avro.DbSnpAnnotations.SCHEMA$);
      if (isValidValue(fields()[0], other.RS)) {
        this.RS = data().deepCopy(fields()[0].schema(), other.RS);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.VLD)) {
        this.VLD = data().deepCopy(fields()[1].schema(), other.VLD);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.G5A)) {
        this.G5A = data().deepCopy(fields()[2].schema(), other.G5A);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.MUT)) {
        this.MUT = data().deepCopy(fields()[3].schema(), other.MUT);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.OM)) {
        this.OM = data().deepCopy(fields()[4].schema(), other.OM);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PM)) {
        this.PM = data().deepCopy(fields()[5].schema(), other.PM);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'RS' field */
    public java.util.List<java.lang.Integer> getRS() {
      return RS;
    }
    
    /** Sets the value of the 'RS' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder setRS(java.util.List<java.lang.Integer> value) {
      validate(fields()[0], value);
      this.RS = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'RS' field has been set */
    public boolean hasRS() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'RS' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder clearRS() {
      RS = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'VLD' field */
    public java.lang.Boolean getVLD() {
      return VLD;
    }
    
    /** Sets the value of the 'VLD' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder setVLD(boolean value) {
      validate(fields()[1], value);
      this.VLD = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'VLD' field has been set */
    public boolean hasVLD() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'VLD' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder clearVLD() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'G5A' field */
    public java.lang.Boolean getG5A() {
      return G5A;
    }
    
    /** Sets the value of the 'G5A' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder setG5A(boolean value) {
      validate(fields()[2], value);
      this.G5A = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'G5A' field has been set */
    public boolean hasG5A() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'G5A' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder clearG5A() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'MUT' field */
    public java.lang.Boolean getMUT() {
      return MUT;
    }
    
    /** Sets the value of the 'MUT' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder setMUT(boolean value) {
      validate(fields()[3], value);
      this.MUT = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'MUT' field has been set */
    public boolean hasMUT() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'MUT' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder clearMUT() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'OM' field */
    public java.lang.Boolean getOM() {
      return OM;
    }
    
    /** Sets the value of the 'OM' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder setOM(boolean value) {
      validate(fields()[4], value);
      this.OM = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'OM' field has been set */
    public boolean hasOM() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'OM' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder clearOM() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'PM' field */
    public java.lang.Boolean getPM() {
      return PM;
    }
    
    /** Sets the value of the 'PM' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder setPM(boolean value) {
      validate(fields()[5], value);
      this.PM = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'PM' field has been set */
    public boolean hasPM() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'PM' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations.Builder clearPM() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public DbSnpAnnotations build() {
      try {
        DbSnpAnnotations record = new DbSnpAnnotations();
        record.RS = fieldSetFlags()[0] ? this.RS : (java.util.List<java.lang.Integer>) defaultValue(fields()[0]);
        record.VLD = fieldSetFlags()[1] ? this.VLD : (java.lang.Boolean) defaultValue(fields()[1]);
        record.G5A = fieldSetFlags()[2] ? this.G5A : (java.lang.Boolean) defaultValue(fields()[2]);
        record.MUT = fieldSetFlags()[3] ? this.MUT : (java.lang.Boolean) defaultValue(fields()[3]);
        record.OM = fieldSetFlags()[4] ? this.OM : (java.lang.Boolean) defaultValue(fields()[4]);
        record.PM = fieldSetFlags()[5] ? this.PM : (java.lang.Boolean) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
