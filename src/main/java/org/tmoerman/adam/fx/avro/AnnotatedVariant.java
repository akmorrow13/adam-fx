/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.tmoerman.adam.fx.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AnnotatedVariant extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AnnotatedVariant\",\"namespace\":\"org.tmoerman.adam.fx.avro\",\"fields\":[{\"name\":\"variant\",\"type\":{\"type\":\"record\",\"name\":\"Variant\",\"namespace\":\"org.bdgenomics.formats.avro\",\"fields\":[{\"name\":\"variantErrorProbability\",\"type\":[\"null\",\"int\"],\"doc\":\"The Phred scaled error probability of a variant, given the probabilities of\\n   the variant in a population.\",\"default\":null},{\"name\":\"contig\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Contig\",\"doc\":\"Record for describing a reference assembly. Not used for storing the contents\\n of said assembly.\\n\\n @see NucleotideContigFragment\",\"fields\":[{\"name\":\"contigName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The name of this contig in the assembly (e.g., \\\"chr1\\\").\",\"default\":null},{\"name\":\"contigLength\",\"type\":[\"null\",\"long\"],\"doc\":\"The length of this contig.\",\"default\":null},{\"name\":\"contigMD5\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The MD5 checksum of the assembly for this contig.\",\"default\":null},{\"name\":\"referenceURL\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The URL at which this reference assembly can be found.\",\"default\":null},{\"name\":\"assembly\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The name of this assembly (e.g., \\\"hg19\\\").\",\"default\":null},{\"name\":\"species\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The species that this assembly is for.\",\"default\":null},{\"name\":\"referenceIndex\",\"type\":[\"null\",\"int\"],\"doc\":\"Optional 0-based index of this contig in a SAM file header that it was read\\n   from; helps output SAMs/BAMs with headers in the same order as they started\\n   with, before a conversion to ADAM.\",\"default\":null}]}],\"doc\":\"The reference contig that this variant exists on.\",\"default\":null},{\"name\":\"start\",\"type\":[\"null\",\"long\"],\"doc\":\"The 0-based start position of this variant on the reference contig.\",\"default\":null},{\"name\":\"end\",\"type\":[\"null\",\"long\"],\"doc\":\"The 0-based, exclusive end position of this variant on the reference contig.\",\"default\":null},{\"name\":\"referenceAllele\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"A string describing the reference allele at this site.\",\"default\":null},{\"name\":\"alternateAllele\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"A string describing the variant allele at this site. Should be left null if\\n   the site is a structural variant.\",\"default\":null},{\"name\":\"svAllele\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"StructuralVariant\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"StructuralVariantType\",\"doc\":\"Descriptors for the type of a structural variant. The most specific descriptor\\n should be used, if possible. E.g., duplication should be used instead of\\n insertion if the inserted sequence is not novel. Tandem duplication should\\n be used instead of duplication if the duplication is known to follow the\\n duplicated sequence.\",\"symbols\":[\"DELETION\",\"INSERTION\",\"INVERSION\",\"MOBILE_INSERTION\",\"MOBILE_DELETION\",\"DUPLICATION\",\"TANDEM_DUPLICATION\"]}],\"doc\":\"The type of this structural variant.\",\"default\":null},{\"name\":\"assembly\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The URL of the FASTA/NucleotideContig assembly for this structural variant,\\n   if one is available.\",\"default\":null},{\"name\":\"precise\",\"type\":[\"boolean\",\"null\"],\"doc\":\"Whether this structural variant call has precise breakpoints or not. Default\\n   value is true. If the call is imprecise, confidence intervals should be provided.\",\"default\":true},{\"name\":\"startWindow\",\"type\":[\"null\",\"int\"],\"doc\":\"The size of the confidence window around the start of the structural variant.\",\"default\":null},{\"name\":\"endWindow\",\"type\":[\"null\",\"int\"],\"doc\":\"The size of the confidence window around the end of the structural variant.\",\"default\":null}]}],\"doc\":\"The structural variant at this site, if the alternate allele is a structural\\n   variant. If the site is not a structural variant, this field should be left\\n   null.\",\"default\":null},{\"name\":\"isSomatic\",\"type\":[\"boolean\",\"null\"],\"doc\":\"A boolean describing whether this variant call is somatic; in this case, the\\n   `referenceAllele` will have been observed in another sample.\",\"default\":false}]}},{\"name\":\"annotations\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"SnpEffAnnotations\",\"fields\":[{\"name\":\"functionalAnnotations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FunctionalAnnotation\",\"fields\":[{\"name\":\"allele\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"annotations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"impact\",\"type\":{\"type\":\"enum\",\"name\":\"Impact\",\"symbols\":[\"HIGH\",\"MODERATE\",\"LOW\",\"MODIFIER\"]}},{\"name\":\"geneName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"geneID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"featureType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"featureID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"transcriptBiotype\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"rankTotal\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Ratio\",\"fields\":[{\"name\":\"rank\",\"type\":\"int\"},{\"name\":\"total\",\"type\":\"int\"}]}]},{\"name\":\"HGSV_c\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"HGSV_p\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"cDNAPositionToLength\",\"type\":[\"null\",\"Ratio\"]},{\"name\":\"CDSPositionToLength\",\"type\":[\"null\",\"Ratio\"]},{\"name\":\"proteinPositionToLength\",\"type\":[\"null\",\"Ratio\"]},{\"name\":\"distanceToFeature\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"errorsWarningsInfo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}},\"default\":[]},{\"name\":\"lossOfFunction\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EffectPrediction\",\"fields\":[{\"name\":\"gene\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"numTranscripts\",\"type\":\"int\"},{\"name\":\"percentAffected\",\"type\":\"float\"}]}},\"default\":[]},{\"name\":\"nonsenseMediatedDecay\",\"type\":{\"type\":\"array\",\"items\":\"EffectPrediction\"},\"default\":[]},{\"name\":\"dbSnpAnnotations\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DbSnpAnnotations\",\"fields\":[{\"name\":\"RS\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"default\":[]},{\"name\":\"VLD\",\"type\":\"boolean\",\"default\":false},{\"name\":\"G5A\",\"type\":\"boolean\",\"default\":false},{\"name\":\"MUT\",\"type\":\"boolean\",\"default\":false},{\"name\":\"OM\",\"type\":\"boolean\",\"default\":false},{\"name\":\"PM\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"clinvarAnnotations\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ClinvarAnnotations\",\"fields\":[{\"name\":\"CLNDSDB\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNACC\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNDBN\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNSRC\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNSIG\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"default\":[]},{\"name\":\"CLNORIGIN\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNDSDBID\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNHGVS\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNSRCID\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public org.bdgenomics.formats.avro.Variant variant;
  @Deprecated public org.tmoerman.adam.fx.avro.SnpEffAnnotations annotations;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AnnotatedVariant() {}

  /**
   * All-args constructor.
   */
  public AnnotatedVariant(org.bdgenomics.formats.avro.Variant variant, org.tmoerman.adam.fx.avro.SnpEffAnnotations annotations) {
    this.variant = variant;
    this.annotations = annotations;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return variant;
    case 1: return annotations;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: variant = (org.bdgenomics.formats.avro.Variant)value$; break;
    case 1: annotations = (org.tmoerman.adam.fx.avro.SnpEffAnnotations)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'variant' field.
   */
  public org.bdgenomics.formats.avro.Variant getVariant() {
    return variant;
  }

  /**
   * Sets the value of the 'variant' field.
   * @param value the value to set.
   */
  public void setVariant(org.bdgenomics.formats.avro.Variant value) {
    this.variant = value;
  }

  /**
   * Gets the value of the 'annotations' field.
   */
  public org.tmoerman.adam.fx.avro.SnpEffAnnotations getAnnotations() {
    return annotations;
  }

  /**
   * Sets the value of the 'annotations' field.
   * @param value the value to set.
   */
  public void setAnnotations(org.tmoerman.adam.fx.avro.SnpEffAnnotations value) {
    this.annotations = value;
  }

  /** Creates a new AnnotatedVariant RecordBuilder */
  public static org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder newBuilder() {
    return new org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder();
  }
  
  /** Creates a new AnnotatedVariant RecordBuilder by copying an existing Builder */
  public static org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder newBuilder(org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder other) {
    return new org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder(other);
  }
  
  /** Creates a new AnnotatedVariant RecordBuilder by copying an existing AnnotatedVariant instance */
  public static org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder newBuilder(org.tmoerman.adam.fx.avro.AnnotatedVariant other) {
    return new org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder(other);
  }
  
  /**
   * RecordBuilder for AnnotatedVariant instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AnnotatedVariant>
    implements org.apache.avro.data.RecordBuilder<AnnotatedVariant> {

    private org.bdgenomics.formats.avro.Variant variant;
    private org.tmoerman.adam.fx.avro.SnpEffAnnotations annotations;

    /** Creates a new Builder */
    private Builder() {
      super(org.tmoerman.adam.fx.avro.AnnotatedVariant.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.variant)) {
        this.variant = data().deepCopy(fields()[0].schema(), other.variant);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.annotations)) {
        this.annotations = data().deepCopy(fields()[1].schema(), other.annotations);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AnnotatedVariant instance */
    private Builder(org.tmoerman.adam.fx.avro.AnnotatedVariant other) {
            super(org.tmoerman.adam.fx.avro.AnnotatedVariant.SCHEMA$);
      if (isValidValue(fields()[0], other.variant)) {
        this.variant = data().deepCopy(fields()[0].schema(), other.variant);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.annotations)) {
        this.annotations = data().deepCopy(fields()[1].schema(), other.annotations);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'variant' field */
    public org.bdgenomics.formats.avro.Variant getVariant() {
      return variant;
    }
    
    /** Sets the value of the 'variant' field */
    public org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder setVariant(org.bdgenomics.formats.avro.Variant value) {
      validate(fields()[0], value);
      this.variant = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'variant' field has been set */
    public boolean hasVariant() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'variant' field */
    public org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder clearVariant() {
      variant = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'annotations' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations getAnnotations() {
      return annotations;
    }
    
    /** Sets the value of the 'annotations' field */
    public org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder setAnnotations(org.tmoerman.adam.fx.avro.SnpEffAnnotations value) {
      validate(fields()[1], value);
      this.annotations = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'annotations' field has been set */
    public boolean hasAnnotations() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'annotations' field */
    public org.tmoerman.adam.fx.avro.AnnotatedVariant.Builder clearAnnotations() {
      annotations = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public AnnotatedVariant build() {
      try {
        AnnotatedVariant record = new AnnotatedVariant();
        record.variant = fieldSetFlags()[0] ? this.variant : (org.bdgenomics.formats.avro.Variant) defaultValue(fields()[0]);
        record.annotations = fieldSetFlags()[1] ? this.annotations : (org.tmoerman.adam.fx.avro.SnpEffAnnotations) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
