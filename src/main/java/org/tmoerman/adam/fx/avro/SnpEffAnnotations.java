/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.tmoerman.adam.fx.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SnpEffAnnotations extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SnpEffAnnotations\",\"namespace\":\"org.tmoerman.adam.fx.avro\",\"fields\":[{\"name\":\"functionalAnnotations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FunctionalAnnotation\",\"fields\":[{\"name\":\"allele\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"annotations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"impact\",\"type\":{\"type\":\"enum\",\"name\":\"Impact\",\"symbols\":[\"HIGH\",\"MODERATE\",\"LOW\",\"MODIFIER\"]}},{\"name\":\"geneName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"geneID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"featureType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"featureID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"transcriptBiotype\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"rankTotal\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Ratio\",\"fields\":[{\"name\":\"rank\",\"type\":\"int\"},{\"name\":\"total\",\"type\":\"int\"}]}]},{\"name\":\"HGSV_c\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"HGSV_p\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"cDNAPositionToLength\",\"type\":[\"null\",\"Ratio\"]},{\"name\":\"CDSPositionToLength\",\"type\":[\"null\",\"Ratio\"]},{\"name\":\"proteinPositionToLength\",\"type\":[\"null\",\"Ratio\"]},{\"name\":\"distanceToFeature\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"errorsWarningsInfo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}},\"default\":[]},{\"name\":\"lossOfFunction\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EffectPrediction\",\"fields\":[{\"name\":\"gene\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"numTranscripts\",\"type\":\"int\"},{\"name\":\"percentAffected\",\"type\":\"float\"}]}},\"default\":[]},{\"name\":\"nonsenseMediatedDecay\",\"type\":{\"type\":\"array\",\"items\":\"EffectPrediction\"},\"default\":[]},{\"name\":\"dbSnpAnnotations\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DbSnpAnnotations\",\"fields\":[{\"name\":\"RS\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"default\":[]},{\"name\":\"VLD\",\"type\":\"boolean\",\"default\":false},{\"name\":\"G5A\",\"type\":\"boolean\",\"default\":false},{\"name\":\"MUT\",\"type\":\"boolean\",\"default\":false},{\"name\":\"OM\",\"type\":\"boolean\",\"default\":false},{\"name\":\"PM\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"clinvarAnnotations\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ClinvarAnnotations\",\"fields\":[{\"name\":\"CLNDSDB\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNACC\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNDBN\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNSRC\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNSIG\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"default\":[]},{\"name\":\"CLNORIGIN\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNDSDBID\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNHGVS\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"CLNSRCID\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<org.tmoerman.adam.fx.avro.FunctionalAnnotation> functionalAnnotations;
  @Deprecated public java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> lossOfFunction;
  @Deprecated public java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> nonsenseMediatedDecay;
  @Deprecated public org.tmoerman.adam.fx.avro.DbSnpAnnotations dbSnpAnnotations;
  @Deprecated public org.tmoerman.adam.fx.avro.ClinvarAnnotations clinvarAnnotations;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SnpEffAnnotations() {}

  /**
   * All-args constructor.
   */
  public SnpEffAnnotations(java.util.List<org.tmoerman.adam.fx.avro.FunctionalAnnotation> functionalAnnotations, java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> lossOfFunction, java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> nonsenseMediatedDecay, org.tmoerman.adam.fx.avro.DbSnpAnnotations dbSnpAnnotations, org.tmoerman.adam.fx.avro.ClinvarAnnotations clinvarAnnotations) {
    this.functionalAnnotations = functionalAnnotations;
    this.lossOfFunction = lossOfFunction;
    this.nonsenseMediatedDecay = nonsenseMediatedDecay;
    this.dbSnpAnnotations = dbSnpAnnotations;
    this.clinvarAnnotations = clinvarAnnotations;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return functionalAnnotations;
    case 1: return lossOfFunction;
    case 2: return nonsenseMediatedDecay;
    case 3: return dbSnpAnnotations;
    case 4: return clinvarAnnotations;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: functionalAnnotations = (java.util.List<org.tmoerman.adam.fx.avro.FunctionalAnnotation>)value$; break;
    case 1: lossOfFunction = (java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction>)value$; break;
    case 2: nonsenseMediatedDecay = (java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction>)value$; break;
    case 3: dbSnpAnnotations = (org.tmoerman.adam.fx.avro.DbSnpAnnotations)value$; break;
    case 4: clinvarAnnotations = (org.tmoerman.adam.fx.avro.ClinvarAnnotations)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'functionalAnnotations' field.
   */
  public java.util.List<org.tmoerman.adam.fx.avro.FunctionalAnnotation> getFunctionalAnnotations() {
    return functionalAnnotations;
  }

  /**
   * Sets the value of the 'functionalAnnotations' field.
   * @param value the value to set.
   */
  public void setFunctionalAnnotations(java.util.List<org.tmoerman.adam.fx.avro.FunctionalAnnotation> value) {
    this.functionalAnnotations = value;
  }

  /**
   * Gets the value of the 'lossOfFunction' field.
   */
  public java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> getLossOfFunction() {
    return lossOfFunction;
  }

  /**
   * Sets the value of the 'lossOfFunction' field.
   * @param value the value to set.
   */
  public void setLossOfFunction(java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> value) {
    this.lossOfFunction = value;
  }

  /**
   * Gets the value of the 'nonsenseMediatedDecay' field.
   */
  public java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> getNonsenseMediatedDecay() {
    return nonsenseMediatedDecay;
  }

  /**
   * Sets the value of the 'nonsenseMediatedDecay' field.
   * @param value the value to set.
   */
  public void setNonsenseMediatedDecay(java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> value) {
    this.nonsenseMediatedDecay = value;
  }

  /**
   * Gets the value of the 'dbSnpAnnotations' field.
   */
  public org.tmoerman.adam.fx.avro.DbSnpAnnotations getDbSnpAnnotations() {
    return dbSnpAnnotations;
  }

  /**
   * Sets the value of the 'dbSnpAnnotations' field.
   * @param value the value to set.
   */
  public void setDbSnpAnnotations(org.tmoerman.adam.fx.avro.DbSnpAnnotations value) {
    this.dbSnpAnnotations = value;
  }

  /**
   * Gets the value of the 'clinvarAnnotations' field.
   */
  public org.tmoerman.adam.fx.avro.ClinvarAnnotations getClinvarAnnotations() {
    return clinvarAnnotations;
  }

  /**
   * Sets the value of the 'clinvarAnnotations' field.
   * @param value the value to set.
   */
  public void setClinvarAnnotations(org.tmoerman.adam.fx.avro.ClinvarAnnotations value) {
    this.clinvarAnnotations = value;
  }

  /** Creates a new SnpEffAnnotations RecordBuilder */
  public static org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder newBuilder() {
    return new org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder();
  }
  
  /** Creates a new SnpEffAnnotations RecordBuilder by copying an existing Builder */
  public static org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder newBuilder(org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder other) {
    return new org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder(other);
  }
  
  /** Creates a new SnpEffAnnotations RecordBuilder by copying an existing SnpEffAnnotations instance */
  public static org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder newBuilder(org.tmoerman.adam.fx.avro.SnpEffAnnotations other) {
    return new org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder(other);
  }
  
  /**
   * RecordBuilder for SnpEffAnnotations instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SnpEffAnnotations>
    implements org.apache.avro.data.RecordBuilder<SnpEffAnnotations> {

    private java.util.List<org.tmoerman.adam.fx.avro.FunctionalAnnotation> functionalAnnotations;
    private java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> lossOfFunction;
    private java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> nonsenseMediatedDecay;
    private org.tmoerman.adam.fx.avro.DbSnpAnnotations dbSnpAnnotations;
    private org.tmoerman.adam.fx.avro.ClinvarAnnotations clinvarAnnotations;

    /** Creates a new Builder */
    private Builder() {
      super(org.tmoerman.adam.fx.avro.SnpEffAnnotations.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.functionalAnnotations)) {
        this.functionalAnnotations = data().deepCopy(fields()[0].schema(), other.functionalAnnotations);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lossOfFunction)) {
        this.lossOfFunction = data().deepCopy(fields()[1].schema(), other.lossOfFunction);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nonsenseMediatedDecay)) {
        this.nonsenseMediatedDecay = data().deepCopy(fields()[2].schema(), other.nonsenseMediatedDecay);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dbSnpAnnotations)) {
        this.dbSnpAnnotations = data().deepCopy(fields()[3].schema(), other.dbSnpAnnotations);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.clinvarAnnotations)) {
        this.clinvarAnnotations = data().deepCopy(fields()[4].schema(), other.clinvarAnnotations);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SnpEffAnnotations instance */
    private Builder(org.tmoerman.adam.fx.avro.SnpEffAnnotations other) {
            super(org.tmoerman.adam.fx.avro.SnpEffAnnotations.SCHEMA$);
      if (isValidValue(fields()[0], other.functionalAnnotations)) {
        this.functionalAnnotations = data().deepCopy(fields()[0].schema(), other.functionalAnnotations);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lossOfFunction)) {
        this.lossOfFunction = data().deepCopy(fields()[1].schema(), other.lossOfFunction);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nonsenseMediatedDecay)) {
        this.nonsenseMediatedDecay = data().deepCopy(fields()[2].schema(), other.nonsenseMediatedDecay);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dbSnpAnnotations)) {
        this.dbSnpAnnotations = data().deepCopy(fields()[3].schema(), other.dbSnpAnnotations);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.clinvarAnnotations)) {
        this.clinvarAnnotations = data().deepCopy(fields()[4].schema(), other.clinvarAnnotations);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'functionalAnnotations' field */
    public java.util.List<org.tmoerman.adam.fx.avro.FunctionalAnnotation> getFunctionalAnnotations() {
      return functionalAnnotations;
    }
    
    /** Sets the value of the 'functionalAnnotations' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder setFunctionalAnnotations(java.util.List<org.tmoerman.adam.fx.avro.FunctionalAnnotation> value) {
      validate(fields()[0], value);
      this.functionalAnnotations = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'functionalAnnotations' field has been set */
    public boolean hasFunctionalAnnotations() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'functionalAnnotations' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder clearFunctionalAnnotations() {
      functionalAnnotations = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'lossOfFunction' field */
    public java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> getLossOfFunction() {
      return lossOfFunction;
    }
    
    /** Sets the value of the 'lossOfFunction' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder setLossOfFunction(java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> value) {
      validate(fields()[1], value);
      this.lossOfFunction = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'lossOfFunction' field has been set */
    public boolean hasLossOfFunction() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'lossOfFunction' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder clearLossOfFunction() {
      lossOfFunction = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'nonsenseMediatedDecay' field */
    public java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> getNonsenseMediatedDecay() {
      return nonsenseMediatedDecay;
    }
    
    /** Sets the value of the 'nonsenseMediatedDecay' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder setNonsenseMediatedDecay(java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction> value) {
      validate(fields()[2], value);
      this.nonsenseMediatedDecay = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'nonsenseMediatedDecay' field has been set */
    public boolean hasNonsenseMediatedDecay() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'nonsenseMediatedDecay' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder clearNonsenseMediatedDecay() {
      nonsenseMediatedDecay = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'dbSnpAnnotations' field */
    public org.tmoerman.adam.fx.avro.DbSnpAnnotations getDbSnpAnnotations() {
      return dbSnpAnnotations;
    }
    
    /** Sets the value of the 'dbSnpAnnotations' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder setDbSnpAnnotations(org.tmoerman.adam.fx.avro.DbSnpAnnotations value) {
      validate(fields()[3], value);
      this.dbSnpAnnotations = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'dbSnpAnnotations' field has been set */
    public boolean hasDbSnpAnnotations() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'dbSnpAnnotations' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder clearDbSnpAnnotations() {
      dbSnpAnnotations = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'clinvarAnnotations' field */
    public org.tmoerman.adam.fx.avro.ClinvarAnnotations getClinvarAnnotations() {
      return clinvarAnnotations;
    }
    
    /** Sets the value of the 'clinvarAnnotations' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder setClinvarAnnotations(org.tmoerman.adam.fx.avro.ClinvarAnnotations value) {
      validate(fields()[4], value);
      this.clinvarAnnotations = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'clinvarAnnotations' field has been set */
    public boolean hasClinvarAnnotations() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'clinvarAnnotations' field */
    public org.tmoerman.adam.fx.avro.SnpEffAnnotations.Builder clearClinvarAnnotations() {
      clinvarAnnotations = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public SnpEffAnnotations build() {
      try {
        SnpEffAnnotations record = new SnpEffAnnotations();
        record.functionalAnnotations = fieldSetFlags()[0] ? this.functionalAnnotations : (java.util.List<org.tmoerman.adam.fx.avro.FunctionalAnnotation>) defaultValue(fields()[0]);
        record.lossOfFunction = fieldSetFlags()[1] ? this.lossOfFunction : (java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction>) defaultValue(fields()[1]);
        record.nonsenseMediatedDecay = fieldSetFlags()[2] ? this.nonsenseMediatedDecay : (java.util.List<org.tmoerman.adam.fx.avro.EffectPrediction>) defaultValue(fields()[2]);
        record.dbSnpAnnotations = fieldSetFlags()[3] ? this.dbSnpAnnotations : (org.tmoerman.adam.fx.avro.DbSnpAnnotations) defaultValue(fields()[3]);
        record.clinvarAnnotations = fieldSetFlags()[4] ? this.clinvarAnnotations : (org.tmoerman.adam.fx.avro.ClinvarAnnotations) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
